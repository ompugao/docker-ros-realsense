<launch>
  <arg name="nodelet_manager" default="manager"/>
  <arg name="camera" default="camera"/>

  <arg name="align_depth"         value="true"/>
  <!-- realsense -->
  <include file="$(find realsense2_camera)/launch/rs_rgbd.launch">
    <arg name="camera"              value="$(arg camera)"/>
    <arg name="tf_prefix"           value="$(arg camera)"/>
    <arg name="external_manager"    value="false"/>
    <arg name="manager"             value="$(arg nodelet_manager)"/>

    <!-- to know available resolutions, see tech data spec: https://www.intelrealsense.com/download/21345/?tmstv=1697035582 -->
    <!-- https://gyazo.com/06ad205c216774b811b0e7a4eaba6fad -->
    <!-- NOTE: If you set align_depth to true, hw registration somehow sets the depth resolution to the color resolution. (note sure why and how)
               Therefore(?), you need to set the same and available resolution for both streams.
    -->
    <arg name="depth_width"         value="480"/>
    <arg name="depth_height"        value="0"/>
    <arg name="depth_fps"           value="30"/>
    <arg name="color_width"         value="480"/>
    <arg name="color_height"        value="0"/>
    <arg name="color_fps"           value="30"/>

    <arg name="enable_depth"        value="true"/>
    <arg name="enable_color"        value="true"/>
    <arg name="enable_gyro"         value="false"/>
    <arg name="enable_accel"        value="false"/>

    <arg name="enable_pointcloud"   value="false"/>
    <arg name="enable_sync"         value="true"/>
    <arg name="align_depth"         value="$(arg align_depth)"/>
    <arg name="filters"             value=""/>

    <arg name="publish_tf"          value="true"/>
    <arg name="tf_publish_rate"     value="0"/> <!-- 0 - static transform -->

    <!-- Processing Modules -->
    <arg name="rgb_processing"                  value="true"/>
    <arg name="debayer_processing"              value="false" />
    <arg name="ir_processing"                   value="false"/>
    <arg name="depth_processing"                value="false"/>
    <arg name="depth_registered_processing"     value="false"/>
    <arg name="disparity_processing"            value="false"/>
    <arg name="disparity_registered_processing" value="false"/>
    <arg name="hw_registered_processing"        value="false"/> <!--"$(arg align_depth)" -->
    <arg name="sw_registered_processing"        value="false" if="$(arg align_depth)" />
  </include>

  <group ns="$(arg camera)">
    <!-- robot filter -->
    <node pkg="nodelet" type="nodelet" name="realtime_urdf_filter_nodelet" args="load realtime_urdf_filter/RealtimeURDFFilterNodelet $(arg nodelet_manager)" output="screen">
      <remap from="~input_depth" to="aligned_depth_to_color/image_raw"/>
      <!--  \- we use hardware aligned depth image.
      If you need non-aligned depth, use "/camera/depth/image_rect_raw".
      In that case, you need to use `depth_image_proc/register' nodelet to register depth image to color image.
      -->
      <remap from="~output_depth" to="depth_robot_filtered/image_rect_raw" />
      <remap from="~output_mask" to="urdf_filtered_mask" />
  
      <rosparam command="load" file="/workspace/params/robot_filter_params.yaml"/>
    </node>
  </group>

  <!--<node name="static_sensor_tf" pkg="tf2_ros" type="static_transform_publisher" args="0.4 -1.3 0.6 -0.59385832 -0.24598417 0.29315252 0.70773278 world camera_link"/>-->
  <node name="static_sensor_tf" pkg="tf2_ros" type="static_transform_publisher" args="0.4 -1.3 0.6 -0.59385832 -0.24598417 0.29315252 0.70773278 world camera_in_openrave" />
  <node name="static_rave_to_camera_tf" pkg="tf2_ros" type="static_transform_publisher" args="0.0 0.0 0.0 0.5 -0.5  0.5 0.5 camera_in_openrave camera_link" />
  <node name="static_world_tf" pkg="tf2_ros" type="static_transform_publisher" args="0.0 0.0 0.0 0.0 0.0 0.0 1.0 world denso/world"/>
  <!-- Load an exajple URDF -->
  <param name="robot_description" command="$(find xacro)/xacro '$(find osr_description)/urdf/denso_pad_robotiq_85_gripper.urdf.xacro'"/>

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
    <param name="tf_prefix" value="/denso"/>
    <param name="publish_frequency" value="30.0"/>
  </node>
  <node name="joint_state_publisher_gui" pkg="joint_state_publisher_gui" type="joint_state_publisher_gui"/>


  <!-- Publish registered XYZRGB point cloud with hardware registered input (ROS Realsense depth alignment) -->
  <group ns="$(arg camera)">
    <!-- registration with color image might be slow -->
    <node pkg="nodelet" type="nodelet" name="points_xyzrgb_hw_registered"
          args="load depth_image_proc/point_cloud_xyzrgb $(arg nodelet_manager) false" respawn="true">
      <remap from="rgb/image_rect_color"        to="color/image_rect_color" />
      <remap from="rgb/camera_info"             to="color/camera_info" />
      <remap from="depth_registered/image_rect" to="depth_robot_filtered/image_rect_raw" />
      <remap from="depth_registered/points"     to="depth_robot_filtered/points" />
    </node>
    <!--
    <node pkg="nodelet" type="nodelet" name="points_xyz_hw_registered"
          args="load depth_image_proc/point_cloud_xyz $(arg nodelet_manager) false" respawn="true">
      <remap from="camera_info" to="depth_robot_filtered/camera_info"/>
      <remap from="image_rect" to="depth_robot_filtered/image_rect_raw"/>
      <remap from="points" to="depth_robot_filtered/points"/>
    </node>
    -->
  </group>
</launch>
